{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\Desktop\\\\stock-app\\\\src\\\\Portfolio.js\";\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nconst Portfolio = props => {\n  const [amountToBuy, setAmountToBuy] = useState(0);\n  const maxQuantity = Math.floor(props.userBalance / props.price);\n\n  const buyLess = () => {\n    let amount = amountToBuy;\n    if (amount - 1 < 0) setAmountToBuy(amount);else setAmountToBuy(--amount);\n  };\n\n  const buyMore = () => {\n    let amount = amountToBuy;\n    if (amount + 1 > maxQuantity) setAmountToBuy(amount);else setAmountToBuy(++amount);\n  };\n\n  const handleFinalize = () => {\n    let moneySpent = (amountToBuy * props.price).toFixed(2);\n    props.handleBuy(props.stockName, moneySpent);\n    setAmountToBuy(0);\n  };\n\n  const handleDisplay = () => {\n    if (props.searchMode) {\n      return React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"caption\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, props.stockName), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, props.price)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"How many to buy?\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: e => buyLess(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"input\", {\n        type: \"number\",\n        value: amountToBuy,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: e => buyMore(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"+\"))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: e => handleFinalize(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Finalize\")))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, handleDisplay());\n};\n\nexport default Portfolio;","map":{"version":3,"sources":["C:/Users/simon/Desktop/stock-app/src/Portfolio.js"],"names":["React","useState","Button","Portfolio","props","amountToBuy","setAmountToBuy","maxQuantity","Math","floor","userBalance","price","buyLess","amount","buyMore","handleFinalize","moneySpent","toFixed","handleBuy","stockName","handleDisplay","searchMode","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Portfolio = props => {\r\n    const [amountToBuy,setAmountToBuy] = useState(0);\r\n    const maxQuantity = Math.floor(props.userBalance / props.price);\r\n    const buyLess = () => {\r\n        let amount = amountToBuy;\r\n        if(amount - 1 < 0) setAmountToBuy(amount);\r\n        else setAmountToBuy(--amount);\r\n    }\r\n\r\n    const buyMore = () => {\r\n        let amount = amountToBuy;\r\n        if(amount + 1 > maxQuantity) setAmountToBuy(amount)\r\n        else setAmountToBuy(++amount);\r\n    }\r\n\r\n    const handleFinalize = () => {\r\n        let moneySpent = (amountToBuy * props.price).toFixed(2);\r\n        props.handleBuy(props.stockName,moneySpent);\r\n        setAmountToBuy(0);\r\n    }\r\n\r\n    const handleDisplay = () => {\r\n        if(props.searchMode){\r\n            return (\r\n                <table className=\"table table-bordered\">\r\n                    <caption className=\"text-center\">{props.stockName}</caption>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Price</td>\r\n                            <td>{props.price}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>How many to buy?</td>\r\n                            <td>\r\n                                <Button onClick={e => buyLess()}>-</Button>\r\n                                <input type=\"number\" value={amountToBuy} disabled/>\r\n                                <Button onClick={e => buyMore()}>+</Button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"12\">\r\n                                <Button onClick={e => handleFinalize()}>Finalize</Button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            );\r\n        }else{\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {handleDisplay()}\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}