{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\Desktop\\\\Stock-Portfolio\\\\stock-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Portfolio from './Portfolio';\nimport SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\nimport NavBar from './NavBar';\nimport axios from 'axios';\nimport Transactions from './Transactions'; // import 'bootstrap/dist/css/bootstrap.min.css';\n\nrequire('dotenv').config();\n\nconst App = () => {\n  const [balance, setBalance] = useState(5000);\n  const [stockToBeSearched, setStockToBeSearched] = useState('MSFT');\n  const [stockSearched, setStockSearched] = useState(0);\n  const [isSearching, setIsSearching] = useState(true);\n  const [prices, setPrices] = useState(0.0);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearchingResults, setIsSearchingResults] = useState(false);\n  const [searching, setSearching] = useState(0);\n  const [searchData, setSearchData] = useState([]);\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    let url = 'https://www.alphavantage.co/query?';\n    let func = 'TIME_SERIES_INTRADAY';\n    let symbol = stockToBeSearched;\n    let apiKey = process.env.REACT_APP_ALPHA_VANTAGE_API_KEY;\n    let interval = '5min';\n    axios.get(`${url}function=${func}&symbol=${symbol}&interval=${interval}&apikey=${apiKey}`).then(json => {\n      console.log(json);\n      return json.data['Time Series (5min)'];\n    }).then(data => {\n      setPrices(Object.entries(data)[0][1]['4. close']);\n    }).then(() => {\n      setIsSearching(true);\n    });\n  }, [stockSearched]);\n  useEffect(() => {\n    let url = 'https://www.alphavantage.co/query?';\n    let func = 'SYMBOL_SEARCH';\n    let keywords = searchTerm;\n    let apiKey = process.env.REACT_APP_ALPHA_VANTAGE_API_KEY;\n    axios.get(`${url}function=${func}&keywords=${keywords}&apikey=${apiKey}`).then(json => {\n      return json.data['bestMatches'];\n    }).then(data => {\n      setSearchData(data);\n    }).then(() => {\n      setIsSearchingResults(true);\n    });\n  }, [searching]);\n\n  const handlePurchase = (company, shares, val) => {\n    setBalance((balance - val).toFixed(2));\n    let trans = transactions;\n    trans.push({\n      \"symbol\": company,\n      \"amount\": shares,\n      \"price\": val\n    });\n    setTransactions(trans); // Will append values to database\n\n    setIsSearching(false);\n  };\n\n  const handleSearchResults = term => {\n    setSearchTerm(term);\n  };\n\n  const incrementSearchCounter = () => {\n    setSearching(searching + 1);\n  };\n\n  const updateSearchTerm = symbol => {\n    setStockSearched(stockSearched + 1);\n    setStockToBeSearched(symbol);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), balance, React.createElement(Portfolio, {\n    stockName: stockToBeSearched,\n    searchMode: isSearching,\n    price: prices,\n    userBalance: balance,\n    handleBuy: handlePurchase,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    handleSearchTerm: handleSearchResults,\n    changeSearchCounter: incrementSearchCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(SearchResults, {\n    showResults: isSearchingResults,\n    term: searchTerm,\n    results: searchData,\n    searchCompany: updateSearchTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Transactions, {\n    trans: transactions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/simon/Desktop/Stock-Portfolio/stock-app/src/App.js"],"names":["React","useState","useEffect","Portfolio","SearchBar","SearchResults","NavBar","axios","Transactions","require","config","App","balance","setBalance","stockToBeSearched","setStockToBeSearched","stockSearched","setStockSearched","isSearching","setIsSearching","prices","setPrices","searchTerm","setSearchTerm","isSearchingResults","setIsSearchingResults","searching","setSearching","searchData","setSearchData","transactions","setTransactions","url","func","symbol","apiKey","process","env","REACT_APP_ALPHA_VANTAGE_API_KEY","interval","get","then","json","console","log","data","Object","entries","keywords","handlePurchase","company","shares","val","toFixed","trans","push","handleSearchResults","term","incrementSearchCounter","updateSearchTerm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Portfolio from './Portfolio';\r\nimport SearchBar from './SearchBar';\r\nimport SearchResults from './SearchResults';\r\nimport NavBar from './NavBar';\r\nimport axios from 'axios';\r\nimport Transactions from './Transactions';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nrequire('dotenv').config();\r\n\r\nconst App = () => {\r\n  const [balance,setBalance] = useState(5000);\r\n  const [stockToBeSearched,setStockToBeSearched] = useState('MSFT');\r\n  const [stockSearched,setStockSearched] = useState(0);\r\n  const [isSearching,setIsSearching] = useState(true);\r\n  const [prices,setPrices] = useState(0.0);\r\n  const [searchTerm,setSearchTerm] = useState('');\r\n  const [isSearchingResults,setIsSearchingResults] = useState(false);\r\n  const [searching,setSearching] = useState(0);\r\n  const [searchData,setSearchData] = useState([]);\r\n  const [transactions,setTransactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let url = 'https://www.alphavantage.co/query?';\r\n    let func = 'TIME_SERIES_INTRADAY';\r\n    let symbol = stockToBeSearched;\r\n    let apiKey = process.env.REACT_APP_ALPHA_VANTAGE_API_KEY;\r\n    let interval = '5min';\r\n    axios.get(`${url}function=${func}&symbol=${symbol}&interval=${interval}&apikey=${apiKey}`)\r\n    .then(json => {\r\n      console.log(json);\r\n      return json.data['Time Series (5min)'];\r\n    })\r\n    .then(data => {\r\n        setPrices(Object.entries(data)[0][1]['4. close'])\r\n    })\r\n    .then(() => {\r\n      setIsSearching(true);\r\n    });\r\n  },[stockSearched]);\r\n\r\n  useEffect(() => {\r\n    let url = 'https://www.alphavantage.co/query?';\r\n    let func = 'SYMBOL_SEARCH';\r\n    let keywords = searchTerm;\r\n    let apiKey = process.env.REACT_APP_ALPHA_VANTAGE_API_KEY;\r\n    axios.get(`${url}function=${func}&keywords=${keywords}&apikey=${apiKey}`)\r\n    .then(json => {\r\n        return json.data['bestMatches'];\r\n    })\r\n    .then(data => {\r\n        setSearchData(data);\r\n    })\r\n    .then(() =>{\r\n      setIsSearchingResults(true);\r\n    });\r\n  },[searching]);\r\n\r\n  const handlePurchase = (company,shares,val) => {\r\n    setBalance((balance - val).toFixed(2));\r\n    let trans = transactions;\r\n    trans.push({\r\n      \"symbol\": company,\r\n      \"amount\": shares,\r\n      \"price\": val,\r\n    });\r\n    setTransactions(trans)\r\n    // Will append values to database\r\n    setIsSearching(false);\r\n  }\r\n\r\n  const handleSearchResults = term => {\r\n    setSearchTerm(term);\r\n  }\r\n\r\n  const incrementSearchCounter = () => {\r\n    setSearching(searching + 1);\r\n  }\r\n\r\n  const updateSearchTerm = symbol => {\r\n    setStockSearched(stockSearched + 1);\r\n    setStockToBeSearched(symbol);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar />\r\n      {balance}\r\n      <Portfolio \r\n        stockName={stockToBeSearched}\r\n        searchMode={isSearching}\r\n        price={prices}\r\n        userBalance={balance}\r\n        handleBuy={handlePurchase}\r\n      />\r\n      <SearchBar\r\n        handleSearchTerm={handleSearchResults}\r\n        changeSearchCounter={incrementSearchCounter}\r\n      />\r\n      <SearchResults \r\n        showResults={isSearchingResults}\r\n        term={searchTerm}\r\n        results={searchData}\r\n        searchCompany={updateSearchTerm}\r\n      />\r\n      <Transactions \r\n        trans={transactions}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}