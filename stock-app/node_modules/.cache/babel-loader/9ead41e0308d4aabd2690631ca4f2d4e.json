{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\Desktop\\\\Stock-Portfolio\\\\stock-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Portfolio from './Portfolio';\nimport SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\nimport axios from 'axios';\n\nrequire('dotenv').config();\n\nconst App = () => {\n  const [balance, setBalance] = useState(5000);\n  const [stockToBeSearched, setStockToBeSearched] = useState('MSFT');\n  const [isSearching, setIsSearching] = useState(true);\n  const [prices, setPrices] = useState(0.0);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearchingResults, setIsSearchingResults] = useState(true);\n  const [searching, setSearching] = useState(0);\n  const [searchData, setSearchData] = useState([]);\n  useEffect(() => {\n    let url = 'https://www.alphavantage.co/query?';\n    let func = 'TIME_SERIES_INTRADAY';\n    let symbol = stockToBeSearched;\n    let apiKey = process.env.REACT_APP_ALPHA_VANTAGE_API_KEY;\n    let interval = '5min';\n    axios.get(`${url}function=${func}&symbol=${symbol}&interval=${interval}&apikey=${apiKey}`).then(json => {\n      return json.data['Time Series (5min)'];\n    }).then(data => {\n      setPrices(Object.entries(data)[0][1]['4. close']);\n    });\n  }, []);\n  useEffect(() => {\n    let url = 'https://www.alphavantage.co/query?';\n    let func = 'SYMBOL_SEARCH';\n    let keywords = searchItem;\n    let apiKey = process.env.REACT_APP_ALPHA_VANTAGE_API_KEY;\n    axios.get(`${url}function=${func}&keywords=${keywords}&apikey=${apiKey}`).then(json => {\n      return json.data['bestMatches'];\n    }).then(data => {\n      setSearchData(data);\n    });\n  }, [searching]); // const searchStock = name => {\n  //   setStockToBeSearched(name);\n  //   setIsSearching(true);\n  // }\n\n  const handlePurchase = (company, val) => {\n    setBalance((balance - val).toFixed(2)); // Will append values to database\n\n    setIsSearching(false);\n  };\n\n  const handleSearchResults = term => {\n    setSearchTerm(term);\n    setIsSearchingResults(true);\n  };\n\n  const incrementSearchCounter = () => {\n    setSearching(searching + 1);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, balance, React.createElement(Portfolio, {\n    stockName: stockToBeSearched,\n    searchMode: isSearching,\n    price: prices,\n    userBalance: balance,\n    handleBuy: handlePurchase,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    handleSearchTerm: handleSearchResults,\n    changeSearchCounter: incrementSearchCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(SearchResults, {\n    showResults: isSearchingResults,\n    term: searchTerm,\n    results: searchData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/simon/Desktop/Stock-Portfolio/stock-app/src/App.js"],"names":["React","useState","useEffect","Portfolio","SearchBar","SearchResults","axios","require","config","App","balance","setBalance","stockToBeSearched","setStockToBeSearched","isSearching","setIsSearching","prices","setPrices","searchTerm","setSearchTerm","isSearchingResults","setIsSearchingResults","searching","setSearching","searchData","setSearchData","url","func","symbol","apiKey","process","env","REACT_APP_ALPHA_VANTAGE_API_KEY","interval","get","then","json","data","Object","entries","keywords","searchItem","handlePurchase","company","val","toFixed","handleSearchResults","term","incrementSearchCounter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Portfolio from './Portfolio';\r\nimport SearchBar from './SearchBar';\r\nimport SearchResults from './SearchResults';\r\nimport axios from 'axios';\r\nrequire('dotenv').config();\r\n\r\nconst App = () => {\r\n  const [balance,setBalance] = useState(5000);\r\n  const [stockToBeSearched,setStockToBeSearched] = useState('MSFT');\r\n  const [isSearching,setIsSearching] = useState(true);\r\n  const [prices,setPrices] = useState(0.0);\r\n  const [searchTerm,setSearchTerm] = useState('');\r\n  const [isSearchingResults,setIsSearchingResults] = useState(true);\r\n  const [searching,setSearching] = useState(0);\r\n  const [searchData,setSearchData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let url = 'https://www.alphavantage.co/query?';\r\n    let func = 'TIME_SERIES_INTRADAY';\r\n    let symbol = stockToBeSearched;\r\n    let apiKey = process.env.REACT_APP_ALPHA_VANTAGE_API_KEY;\r\n    let interval = '5min';\r\n    axios.get(`${url}function=${func}&symbol=${symbol}&interval=${interval}&apikey=${apiKey}`)\r\n    .then(json => {\r\n        return json.data['Time Series (5min)'];\r\n    })\r\n    .then(data => {\r\n        setPrices(Object.entries(data)[0][1]['4. close'])\r\n    });\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    let url = 'https://www.alphavantage.co/query?';\r\n    let func = 'SYMBOL_SEARCH';\r\n    let keywords = searchItem;\r\n    let apiKey = process.env.REACT_APP_ALPHA_VANTAGE_API_KEY;\r\n    axios.get(`${url}function=${func}&keywords=${keywords}&apikey=${apiKey}`)\r\n    .then(json => {\r\n        return json.data['bestMatches'];\r\n    })\r\n    .then(data => {\r\n        setSearchData(data);\r\n    });\r\n  },[searching])\r\n\r\n  // const searchStock = name => {\r\n  //   setStockToBeSearched(name);\r\n  //   setIsSearching(true);\r\n  // }\r\n\r\n  const handlePurchase = (company,val) => {\r\n    setBalance((balance - val).toFixed(2));\r\n    // Will append values to database\r\n    setIsSearching(false);\r\n  }\r\n\r\n  const handleSearchResults = term => {\r\n    setSearchTerm(term);\r\n    setIsSearchingResults(true);\r\n  }\r\n\r\n  const incrementSearchCounter = () => {\r\n    setSearching(searching + 1);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {balance}\r\n      <Portfolio \r\n        stockName={stockToBeSearched}\r\n        searchMode={isSearching}\r\n        price={prices}\r\n        userBalance={balance}\r\n        handleBuy={handlePurchase}\r\n      />\r\n      <SearchBar\r\n        handleSearchTerm={handleSearchResults}\r\n        changeSearchCounter={incrementSearchCounter}\r\n      />\r\n      <SearchResults \r\n        showResults={isSearchingResults}\r\n        term={searchTerm}\r\n        results={searchData}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}