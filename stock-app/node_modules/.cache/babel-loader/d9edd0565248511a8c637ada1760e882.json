{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\Desktop\\\\Stock-Portfolio\\\\stock-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Portfolio from './Portfolio';\nimport SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\nimport axios from 'axios';\n\nrequire('dotenv').config();\n\nconst App = () => {\n  const [balance, setBalance] = useState(5000);\n  const [stockToBeSearched, setStockToBeSearched] = useState('MSFT');\n  const [isSearching, setIsSearching] = useState(true);\n  const [prices, setPrices] = useState(0.0);\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearchingResults, setIsSearchingResults] = useState(false);\n  useEffect(() => {\n    let url = 'https://www.alphavantage.co/query?';\n    let func = 'TIME_SERIES_INTRADAY';\n    let symbol = stockToBeSearched;\n    let apiKey = process.env.REACT_APP_ALPHA_VANTAGE_API_KEY;\n    let interval = '5min';\n    axios.get(`${url}function=${func}&symbol=${symbol}&interval=${interval}&apikey=${apiKey}`).then(json => {\n      console.log(json.data);\n      return json.data['Time Series (5min)'];\n    }).then(data => {\n      setPrices(Object.entries(data)[0][1]['4. close']);\n    });\n  }, []); // const searchStock = name => {\n  //   setStockToBeSearched(name);\n  //   setIsSearching(true);\n  // }\n\n  const handlePurchase = (company, val) => {\n    setBalance((balance - val).toFixed(2)); // Will append values to database\n\n    setIsSearching(false);\n  };\n\n  const handleSearchResults = results => {\n    setIsSearchingResults(true);\n    setSearchResults(results);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, balance, React.createElement(Portfolio, {\n    stockName: stockToBeSearched,\n    searchMode: isSearching,\n    price: prices,\n    userBalance: balance,\n    handleBuy: handlePurchase,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    handleResults: handleSearchResults,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(SearchResults, {\n    showResults: isSearchingResults,\n    results: searchResults,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/simon/Desktop/Stock-Portfolio/stock-app/src/App.js"],"names":["React","useState","useEffect","Portfolio","SearchBar","SearchResults","axios","require","config","App","balance","setBalance","stockToBeSearched","setStockToBeSearched","isSearching","setIsSearching","prices","setPrices","searchResults","setSearchResults","isSearchingResults","setIsSearchingResults","url","func","symbol","apiKey","process","env","REACT_APP_ALPHA_VANTAGE_API_KEY","interval","get","then","json","console","log","data","Object","entries","handlePurchase","company","val","toFixed","handleSearchResults","results"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACW,iBAAD,EAAmBC,oBAAnB,IAA2CZ,QAAQ,CAAC,MAAD,CAAzD;AACA,QAAM,CAACa,WAAD,EAAaC,cAAb,IAA+Bd,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACe,MAAD,EAAQC,SAAR,IAAqBhB,QAAQ,CAAC,GAAD,CAAnC;AACA,QAAM,CAACiB,aAAD,EAAeC,gBAAf,IAAmClB,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACmB,kBAAD,EAAoBC,qBAApB,IAA6CpB,QAAQ,CAAC,KAAD,CAA3D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,GAAG,GAAG,oCAAV;AACA,QAAIC,IAAI,GAAG,sBAAX;AACA,QAAIC,MAAM,GAAGZ,iBAAb;AACA,QAAIa,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,+BAAzB;AACA,QAAIC,QAAQ,GAAG,MAAf;AACAvB,IAAAA,KAAK,CAACwB,GAAN,CAAW,GAAER,GAAI,YAAWC,IAAK,WAAUC,MAAO,aAAYK,QAAS,WAAUJ,MAAO,EAAxF,EACCM,IADD,CACMC,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACA,aAAOH,IAAI,CAACG,IAAL,CAAU,oBAAV,CAAP;AACH,KAJD,EAKCJ,IALD,CAKMI,IAAI,IAAI;AACVlB,MAAAA,SAAS,CAACmB,MAAM,CAACC,OAAP,CAAeF,IAAf,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,UAA3B,CAAD,CAAT;AACH,KAPD;AAQD,GAdQ,EAcP,EAdO,CAAT,CARgB,CAwBhB;AACA;AACA;AACA;;AAEA,QAAMG,cAAc,GAAG,CAACC,OAAD,EAASC,GAAT,KAAiB;AACtC7B,IAAAA,UAAU,CAAC,CAACD,OAAO,GAAG8B,GAAX,EAAgBC,OAAhB,CAAwB,CAAxB,CAAD,CAAV,CADsC,CAEtC;;AACA1B,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAJD;;AAMA,QAAM2B,mBAAmB,GAAGC,OAAO,IAAI;AACrCtB,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAF,IAAAA,gBAAgB,CAACwB,OAAD,CAAhB;AACD,GAHD;;AAKA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjC,OADH,EAEE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEE,iBADb;AAEE,IAAA,UAAU,EAAEE,WAFd;AAGE,IAAA,KAAK,EAAEE,MAHT;AAIE,IAAA,WAAW,EAAEN,OAJf;AAKE,IAAA,SAAS,EAAE4B,cALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE,oBAAC,SAAD;AACE,IAAA,aAAa,EAAEI,mBADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAYE,oBAAC,aAAD;AACE,IAAA,WAAW,EAAEtB,kBADf;AAEE,IAAA,OAAO,EAAEF,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAmBD,CA3DD;;AA6DA,eAAeT,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Portfolio from './Portfolio';\r\nimport SearchBar from './SearchBar';\r\nimport SearchResults from './SearchResults';\r\nimport axios from 'axios';\r\nrequire('dotenv').config();\r\n\r\nconst App = () => {\r\n  const [balance,setBalance] = useState(5000);\r\n  const [stockToBeSearched,setStockToBeSearched] = useState('MSFT');\r\n  const [isSearching,setIsSearching] = useState(true);\r\n  const [prices,setPrices] = useState(0.0);\r\n  const [searchResults,setSearchResults] = useState([]);\r\n  const [isSearchingResults,setIsSearchingResults] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let url = 'https://www.alphavantage.co/query?';\r\n    let func = 'TIME_SERIES_INTRADAY';\r\n    let symbol = stockToBeSearched;\r\n    let apiKey = process.env.REACT_APP_ALPHA_VANTAGE_API_KEY;\r\n    let interval = '5min';\r\n    axios.get(`${url}function=${func}&symbol=${symbol}&interval=${interval}&apikey=${apiKey}`)\r\n    .then(json => {\r\n        console.log(json.data)\r\n        return json.data['Time Series (5min)'];\r\n    })\r\n    .then(data => {\r\n        setPrices(Object.entries(data)[0][1]['4. close'])\r\n    });\r\n  },[])\r\n\r\n  // const searchStock = name => {\r\n  //   setStockToBeSearched(name);\r\n  //   setIsSearching(true);\r\n  // }\r\n\r\n  const handlePurchase = (company,val) => {\r\n    setBalance((balance - val).toFixed(2));\r\n    // Will append values to database\r\n    setIsSearching(false);\r\n  }\r\n\r\n  const handleSearchResults = results => {\r\n    setIsSearchingResults(true);\r\n    setSearchResults(results);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {balance}\r\n      <Portfolio \r\n        stockName={stockToBeSearched}\r\n        searchMode={isSearching}\r\n        price={prices}\r\n        userBalance={balance}\r\n        handleBuy={handlePurchase}\r\n      />\r\n      <SearchBar\r\n        handleResults={handleSearchResults}\r\n      />\r\n      <SearchResults \r\n        showResults={isSearchingResults}\r\n        results={searchResults}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}