{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\Desktop\\\\stock-app\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport Portfolio from './Portfolio';\nimport SearchBar from './SearchBar';\n\nrequire('dotenv').config();\n\nconst App = () => {\n  const [balance, setBalance] = useState(5000);\n  const [stockToBeSearched, setStockToBeSearched] = useState('MSFT');\n  const [isSearching, setIsSearching] = useState(false);\n  const [prices, setPrices] = useState(0.0);\n  useEffect(() => {\n    let url = 'https://www.alphavantage.co/query?';\n    let func = 'TIME_SERIES_INTRADAY';\n    let symbol = stockToBeSearched;\n    let apiKey = process.env.REACT_APP_ALPHA_VANTAGE_API_KEY;\n    let interval = '5min';\n    axios.get(`${url}function=${func}&symbol=${symbol}&interval=${interval}&apikey=${apiKey}`).then(json => {\n      return json.data['Time Series (5min)'];\n    }).then(data => {\n      setPrices(Object.entries(data)[0][1]['4. close']);\n    });\n  }, []);\n\n  const searchStock = name => {\n    console.log(name);\n    setStockToBeSearched(name);\n    setIsSearching(true);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, balance, React.createElement(Portfolio, {\n    stockName: stockToBeSearched,\n    searchMode: isSearching,\n    price: prices,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(SearchBar, {\n    handleSearch: searchStock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/simon/Desktop/stock-app/src/App.js"],"names":["React","useState","Portfolio","SearchBar","require","config","App","balance","setBalance","stockToBeSearched","setStockToBeSearched","isSearching","setIsSearching","prices","setPrices","useEffect","url","func","symbol","apiKey","process","env","REACT_APP_ALPHA_VANTAGE_API_KEY","interval","axios","get","then","json","data","Object","entries","searchStock","name","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBP,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACQ,iBAAD,EAAmBC,oBAAnB,IAA2CT,QAAQ,CAAC,MAAD,CAAzD;AACA,QAAM,CAACU,WAAD,EAAaC,cAAb,IAA+BX,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAACY,MAAD,EAAQC,SAAR,IAAqBb,QAAQ,CAAC,GAAD,CAAnC;AAEAc,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIC,GAAG,GAAG,oCAAV;AACA,QAAIC,IAAI,GAAG,sBAAX;AACA,QAAIC,MAAM,GAAGT,iBAAb;AACA,QAAIU,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,+BAAzB;AACA,QAAIC,QAAQ,GAAG,MAAf;AACAC,IAAAA,KAAK,CAACC,GAAN,CAAW,GAAET,GAAI,YAAWC,IAAK,WAAUC,MAAO,aAAYK,QAAS,WAAUJ,MAAO,EAAxF,EACCO,IADD,CACMC,IAAI,IAAI;AACV,aAAOA,IAAI,CAACC,IAAL,CAAU,oBAAV,CAAP;AACH,KAHD,EAICF,IAJD,CAIME,IAAI,IAAI;AACVd,MAAAA,SAAS,CAACe,MAAM,CAACC,OAAP,CAAeF,IAAf,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,UAA3B,CAAD,CAAT;AACH,KAND;AAOD,GAbQ,EAaP,EAbO,CAAT;;AAeA,QAAMG,WAAW,GAAGC,IAAI,IAAI;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAtB,IAAAA,oBAAoB,CAACsB,IAAD,CAApB;AACApB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAJD;;AAMA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OADH,EAEE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEE,iBADb;AAEE,IAAA,UAAU,EAAEE,WAFd;AAGE,IAAA,KAAK,EAAEE,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAEkB,WADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAaD,CAxCD;;AA0CA,eAAezB,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Portfolio from './Portfolio';\nimport SearchBar from './SearchBar';\nrequire('dotenv').config();\n\nconst App = () => {\n  const [balance,setBalance] = useState(5000);\n  const [stockToBeSearched,setStockToBeSearched] = useState('MSFT');\n  const [isSearching,setIsSearching] = useState(false);\n  const [prices,setPrices] = useState(0.0);\n\n  useEffect(() => {\n    let url = 'https://www.alphavantage.co/query?';\n    let func = 'TIME_SERIES_INTRADAY';\n    let symbol = stockToBeSearched;\n    let apiKey = process.env.REACT_APP_ALPHA_VANTAGE_API_KEY;\n    let interval = '5min';\n    axios.get(`${url}function=${func}&symbol=${symbol}&interval=${interval}&apikey=${apiKey}`)\n    .then(json => {\n        return json.data['Time Series (5min)'];\n    })\n    .then(data => {\n        setPrices(Object.entries(data)[0][1]['4. close'])\n    });\n  },[])\n\n  const searchStock = name => {\n    console.log(name);\n    setStockToBeSearched(name);\n    setIsSearching(true);\n  }\n\n  return (\n    <React.Fragment>\n      {balance}\n      <Portfolio \n        stockName={stockToBeSearched}\n        searchMode={isSearching}\n        price={prices}\n      />\n      <SearchBar \n        handleSearch={searchStock}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}